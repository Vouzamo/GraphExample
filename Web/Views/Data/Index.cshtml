@using Data.Context
@using Models.GraphModels
@model Artist

@{
    Layout = null;
    
    GraphContext context = new GraphContext("GraphDatabase");
    
    GraphModel graphModel = new GraphModel(context);
    graphModel.AddNode(Model);
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <style type="text/css">
        .node {
          stroke: #fff;
          stroke-width: 1.5px;
        }
        .node text {
            font-family: sans-serif;
            font-size: 12px;
            stroke: #fff;
            stroke-width: 1;
            text-anchor: middle;
        }
        .link {
          stroke: #999;
          stroke-opacity: .6;
        }
    </style>
</head>
<body>
    <div>
        <span>@Model.Name &gt;</span>
        
        @foreach (Edge edge in context.QueryOutboundEdges<Album>(Model))
        {
            Album album = edge.ToNode as Album;
            
            <span>@album.Name (@album.ReleaseDate.ToShortDateString()) &gt;</span>
            
            foreach (Edge innerEdge in context.QueryOutboundEdges<Track>(album))
            {
                Track track = innerEdge.ToNode as Track;
                
                <span>@track.Name (@track.Length.TotalSeconds) &gt;</span>
            }
        }
    </div>
    <div id="graphData" style="display:none;">
        @Html.Partial("NodeGraph", graphModel)
    </div>

    <script src="~/Scripts/jquery-2.1.1.js"></script>
    <script src="~/Scripts/d3.js"></script>
    <script src="~/Scripts/graphData.js"></script>
</body>
</html>
